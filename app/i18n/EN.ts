export default {
  Agreement: {
    agreement: "Agreement",
    Agreement: "AGREEMENT",
  },
  Certificate: {
    Certificate: "CERTIFICATES",
    FCertificates: "MANAGMENT",
    certificate: "A certificate",
    certs: "Certificates",
    key_import_ok: "The key is attached to the certificate",
    key_import_failed: "Key import failed",
    cert_info: "Certificate information",
    cert: "Certificates",
    cert_not_found: "The certificate is not found",
    cert_not_select: "A certificate is not selected",
    Select_Cert_Sign: "SELECT THE SIGNATURE CERTIFICATE",
    cert_chain: "Certificate hierarchy",
    serialNumber: "Serial number",
    thumbprint: "Thumbprint",
    version: "Version",
    subject: "Certificate owner",
    organization: "Organization",
    issuer: "Certificate Authority",
    cert_valid: "Is valid until",
    import_key: "Import the key",
    priv_key: "Private key",
    issuer_name: "Issuer",
    present: "Private key is present",
    absent: "Private key is absent",
    cert_status_true: "valid",
    cert_status_false: "not valid",
    cert_chain_status: "Certificate chain status",
    cert_chain_info: "Certificate chain info",
    cert_chain_status_true: "valid",
    cert_chain_status_false: "not valid",
    cert_export: "Export the certificate",
    export_cert: "Export the certificate",
    cert_export_ok: "The certificate is successfully exported",
    cert_export_cancel: "Cancel the certificate export",
    cert_export_failed: "The certificate export failed",
    cert_import_ok: "The certificate is successfully imported",
    cert_import_failed: "The certificate import failed",
    cert_load_failed: "The certificate file cannot be read",
    cert_import: "Import the certificate",
    Select_Cert_Encrypt: "SELECT THE RECIPIENT'S CERTIFICATE",
    certs_encrypt: "Encryption certificates",
    certs_getters: "The recipients' certificates",
    cert_imported: "The certificate is already imported",
    certs_my: "Personal Certificates",
    certs_other: "Other user certificates",
    certs_intermediate: "Intermediate certificates",
    certs_root: "Trusted Root Certificates",
    certs_token: "External token/card certificates",
  },
  CSR: {
    create_selfSigned: "Create self-signed certificate",
    template_label: "Certificate template",
    template_default: "Default template",
    template_additional_fields: "Template with additional fields",
    template_kep_ip: "Сертификат КЭП индивидуального предпринимателя",
    template_kep_fiz: "Сертификат КЭП физичексого лица",
    csp_label: "Cryptography service provider",
    csp_openssl: "OpenSSL RSA",
    csp_microsoft_base: "Microsoft Base Cryptografic Provaider v1.0",
    not_after: "Valid not after",
    generate_new_key: "Create new key pair",
    key_length: "Key length",
    country: "Country",
    common_name: "CN",
    organization_name: "Organization Name (eg, company)",
    locality_name: "Locality Name (eg, city)",
    province_name: "State or Province Name (full name)",
    email_address: "Email Address",
  },
  Key: {
    key_load_failed: "Error load key",
  },
  Encrypt: {
    archive_name: "encrypt_files.zip",
    files_archived: "The files are archived",
    files_encrypt: "The files are encrypted",
    files_encrypt_failed: "File encryption failed",
    files_archived_failed: "File archivation failed ",
    decrypt_key_failed: "The private key is not found",
    files_decrypt: "The files are decrypted",
    files_decrypt_failed: "Error load key",
    encrypt_and_decrypt: "Encrypt / Decrypt",
    encrypt: "Encrypt",
    Encrypt: "ENCRYPT",
    decrypt: "Decrypt",
    Encryption: "FILES",
    encrypt_setting: "Encryption settings",
    delete_files_after: "Delete files after encryption",
    archive_files_before: "Archive files before encryption",
    search_decrypt_cert_failed: "The decryption certificate is not found",
  },
  Sign: {
    sign_and_verify: "Sign / Verify the signature",
    sign: "Sign",
    resign: "Re-sign",
    unsign: "Remove a signature",
    Sign: "SIGN",
    Signature: "SIGNATURE",
    verify: "Verify",
    load_sign_failed: "Error load sign",
    files_signed: "The files are signed",
    files_signed_failed: "File signing failed",
    files_resigned_failed: "File re-signing failed",
    files_resigned_exist: "The file is already re-signed. Select another certificate",
    files_resigned: "The file is re-signed",
    files_unsigned_failed: "Signature removal error",
    files_unsigned_detached: "A detached signature",
    files_unsigned_ok: "The signature is successfully removed",
    verify_sign_ok: "The signature is successfully verified",
    verify_sign_founds_errors: "Errors were detected while verifying",
    verify_signercontent_founds_errors: "Error: signed content not found",
    verify_sign_failed: "Signature verification failed",
    verify_signers_failed: "Error: verify signers",
    verify_get_content_failed: "The original file is not found",
    set_content_failed: "Error: content not found",
    build_chain_failed: "Chain building failed",
    sign_info: "Signature information",
    sign_content_file: "Sign content file",
    sign_detached: "Save the signature as detached",
    sign_time: "Add time of signature",
    sign_setting: "Signature settings",
    sign_ok: "The signature is valid",
    sign_error: "The signature is not valid",
    key_not_found: "The key is not found",
    signercert_not_found: "Error: signer cert not found",
    status: "The status",
    alg: "Signature algorithm",
    digest_alg: "Hash algorithm",
  },
  Settings: {
    settings: "Settings",
    Settings: "SETTINGS",
    cert_button: "Select certificate", 
    cert_block_title: "Certificate of information system", 
    proxy_block_title: "Proxy server settings", 
    test_block_title: "Testing the exchange with GIS utilities",   
    log_block_title: "Operation Log Settings", 
    loglevel: "Logging level:",  
    loglevel_choose: "Select the logging level",
    OFF: "Logging is disabled",
    FATAL: "Critical errors",        
    ERROR: "Errors", 
    WARN: "Warnings", 
    INFO: "Information", 
    DEBUG: "Debugging information", 
    TRACE: "Trace information", 
    ALL: "Logging all", 
    clear_journal: "Clear log",
    test_response: "Test the exchange",  
    encoding: "Encoding type",
    directory_file_save: "Save the file to",
    failed_find_directory: "The directory is not found",
    DER: "DER",
    BASE: "BASE-64",
    add_files: "Add files",
    selected_all: "Select all",
    remove_selected: "Delete selection",
    remove_all_files: "Remove all listed files",
    drag_drop: "Drag and drop the files",
    open_file: "Open the file",
    go_to_file: "Go to the file",
    delete_file: "Delete the file from the list",
    write_file_failed: "File saving error",
    write_file_ok: "The settings saved",
    setting_file: "settings.json",
    field_empty: "This field cannot be empty!",
    email_error: "Email is not valid",
    choose_files: "Choose files",
    choose: "Choose",
    remove_list: "Clear the list",
    print: "Print",
    Control: "CERTIFICATES",
    Datas: "ENCRYPTION",
    Digital: "DIGITAL",
    pass_enter: "Enter the password",
    password: "Password",
    wait: "Please wait",
    port: "Port:",   
    status: "Status:",
    ip_server: "Server ip:",
    port_server: "Server port:"
  },
  Help: {
    help: "Help",
    Help: "HELP",
    Work_App: "HOW THE APPLICATION WORKS",
    video: [
      {
        src: "https://upload.wikimedia.org/wikipedia/commons/e/e6/Typing_example.ogv",
        title: "CREATION OF A SIGNATURE",
      },
      {
        src: "http://www.youtubeinmp4.com/redirect.php?video=6Dc1C77nra4",
        title: "ENCRYPTION",
      },
      {
        src: "https://upload.wikimedia.org/wikipedia/commons/6/65/Examplevideo.ogv",
        title: "CERTIFICATES OPERATIONS",
      },
      {
        src: "https://upload.wikimedia.org/wikipedia/commons/transcoded/1/14/Xacti-AC8EX-Sample_video-001.ogg/Xacti-AC8EX-Sample_video-001.ogg.360p.ogv",
        title: "SIGNATURE VERIFICATION",
      },
      {
        src: "https://upload.wikimedia.org/wikipedia/en/6/6e/Terminator.ogg",
        title: "DECRYPTION",
      },
      {
        src: "http://html5videoformatconverter.com/data/images/happyfit2.mp4",
        title: "HOW TO WORK WITH TRUSTED NET SERVICE",
      },
    ],
    video_failed: "This video cannot be played. Please check your Internet connection",
  },
  About: {
    about: "About the program",
    About: "ABOUT THE PROGRAM",
    message_send: "The message is sent",
    error_message_send: "Message failed to send",
    version_full: "Version: 1.0.0",
    version: "1.0.0",
    version_app: "Application version",
    build_number: "Build number",
    product_NAME: "Trusted JKH",
    product_name: "Trusted JKH",
    FeedBack: "FEEDBACK",
    feedback_description: "Report developers about any problems or suggest ideas for improving the program",
    username: "Name",
    email: "Email",
    message: "Message",
    send: "Send",
    Contacts: "Contacts",
    Info: "Info",
    about_programm: "The Trusted Housing and Communal Services application is designed to create a secure channel for sending requests to the GIS Housing Portal and receiving information.",
    reason_build: "The program was built on the basis of Electron v0.37.8 and OpenSSL v1.0.2k.",
    company_name: "Company Digt",
    copyright: "Copyright 2016-2017",
    address: "Petrova St, 1, Yoshkar-Ola, Mari El Republic, Russia, 424033",
    phone: {
      number_one: "+7 (8362) 33-70-50",
      number_two: "+7 (499) 705-91-10",
      number_three: "+7 (800) 555-65-81",
    },
    info: "info@trusted.plus",
    info_about_product: "The Trusted Housing and Communal Services application is intended for sending packages of documents and requests for information from the portal of GIS Housing (dom.gosuslugi.ru)",
    info_about_setting: "Setting the parameters of the PROXY server for connection to the GIS Portal", 
    info_about_journal: "Viewing the operations for sending / receiving messages",   
    info_about_sign: "Sign any type of document files and other content",
    info_about_encrypt: "Protection of your documents and any other content by using encryption to address one or more recipients",
    info_about_certificate: "Centralized management of local and cloud-based certificate storages",
    link_facebook: "https://www.facebook.com/cryptoarm/",
    link_vk: "http://vk.com/cryptoarm",
    link_twitter: "https://twitter.com/cryptoarm",
    link_trusred: "http://www.trusted.ru/",
  },
  License: {
    license: "License",
    License: "LICENSE",
    About_License: "LICENSE INFORMATION",
    license_key: "The license key",
    Enter_Key: "ENTER THE KEY",
    entered_the_key: "Enter the key",
    key_file_name: "desktopkey.lic",
    failed_key_find: "The license key is not found",
    failed_validity_key: "The license key has expired",
    failed_match_key: "The license key file does not match the application",
    failed_key: "The license key is incorrect",
    key: "The key",
    Entered: "ENTER",
    enter_key: "Enter the license",
    lic_file_not_found: "The license file is not found",
    lic_file_uncorrect: "The license file is not correct",
    lic_key_uncorrect: "The license key is not correct",
    lic_key_correct: "The license key is valid (Days left: ",
    lic_key_correct_days: "Error: license key is not correct",
    lic_key_setup: "The license key is successfully set up",
    lic_file_choose: "Choose the license file",
    lic_status: "The licence status",
    lic_notbefore: "Issue date of the license",
    lic_notafter: "Expiration date of the license",
    lic_unlimited: "Unlimited",
    jwtErrorInternal: "The license checking internal error",
    jwtErrorLoad: "Loading license failed",
    jwtErrorTokenFormat: "The license token invalid format",
    jwtErrorSign: "The license have invalid signature",
    jwtErrorParsing: "Can't parse license token info",
    jwtErrorStructure: "The license have invalid token info structure",
    jwtErrorProduct: "The license does not match the application",
    jwtErrorExpired: "The license expired",
    jwtErrorStarted: "The license doesn't started",
    jwtErrorOperation: "An unknown operation requested",
    jwtErrorNoLicenseInStore: "No find valid license for operation",
    jwtErrorStoreIsLocked: "Load license was loked",
    jwtErrorCode: "Unknown error code",
  },
  Kegistration: {
    LoginAndPass: "A USERNAME AND PASSWORD AUTHENTICATION",
    Social: "SOCIAL NETWORKS AUTHENTICATION",
    Cert: "CERTIFICATE-BASED AUTHENTICATION",
    RLoginAndPass: "LOGIN AND PASSWORD",
    RSocial: "SOCIAL NETWORKS",
    RCert: "DIGITAL CERTIFICATE",
    login: "Login",
    enter: "Enter",
    sign_up: "Sign up",
    choose_reg: "CHOOSE THE REGISTRATION TYPE ON TRUSTED NET",
    enter_service: "Enter the service",
    App_Functions: "SEVERAL USEFUL APPLICATION FUNCTIONS",
    Empowerment: "FUNCTIONAL EXTENSIONS WITH CONNECTION TO TRUSTED NET SERVICE",
  },
  Journal: {
    journal: "Journal",
    Journal: "JOURNAL",
  },
  Common: {
    tooltip_start: "Starting the proxy server",  
    tooltip_stop: "Stoping the proxy server",   
    tooltip_restart: "Restarting the proxy server", 
    yes: "Yes",
    no: "No",
    add_files: "Add files",
    add_all_files: "Add files from all the subfolders?",
    ru: "Russian",
    en: "English",
    read_file_error: "Reading from the file error",
    write_file_error: "Error: write file",
    or: "or",
    subject: "Owner",
    product: "Product",
    files_not_found: "Files are not found: perhaps they were removed or renamed",
    Back: "Back",
    serverStart: "SERVER STARTED",
    serverStop: "SERVER IS STOPPED",
    serverRestart: "SERVER RESTART...",
  },
  Requests: {
    requests: "requests",
    Requests: "REQUESTS",
  },
};
